MAS_PAGE
{
  name = MAS_BCS_IntroPageUL

  onEntry = fc.SetPersistent("MFDUL_Page", 0)

  softkey = 0, fc.SetPersistent("MFD_UL", "MAS_BCS_MapPageUL")
  softkey = 1, fc.SetPersistent("MFD_UL", "MAS_BCS_DockingPageUL")
  softkey = 2, fc.SetPersistent("MFD_UL", "MAS_BCS_CameraPageUL")
  softkey = 3, fc.SetPersistent("MFD_UL", "MAS_BCS_LandingPageUL")
  softkey = 6, fc.SetPersistent("MFD_UL", "MAS_BCS_IntroPageUL")

  IMAGE
  {
    name = BG
    texture = BCS_Starliner_IVA/Images/BCSLogoU
    position = 0, 0
    size = 1280, 832
    passiveColor = 255, 255, 255, 255
  }

  SUB_PAGE
  {
    name = BCS_Upper_Bar_UL
    position = 0, 0
  }
}

MAS_PAGE
{
  name = MAS_BCS_MapPageUL

  onEntry = fc.SetPersistent("MFDUL_Page", 1)

  softkey = 0, fc.SetPersistent("MFD_UL", "MAS_BCS_MapPageUL")
  softkey = 1, fc.SetPersistent("MFD_UL", "MAS_BCS_DockingPageUL")
  softkey = 2, fc.SetPersistent("MFD_UL", "MAS_BCS_CameraPageUL")
  softkey = 3, fc.SetPersistent("MFD_UL", "MAS_BCS_LandingPageUL")
  softkey = 6, fc.SetPersistent("MFD_UL", "MAS_BCS_IntroPageUL")

  TEXT
  {
    name = FMC Warning
    position = 36, 12.5
    textColor = 255, 0, 0, 255
    text = SMC1 OFF
    variable = fc.GetPersistentAsNumber("Global_SMC1_State") == 0 and fc.PeriodStep(2) == 1
  }

  SUB_PAGE
  {
    name = BCS_UL_RasterMap
    position = 0, 64
    variable = fc.GetPersistentAsNumber("Global_SMC1_State")
  }

  SUB_PAGE
  {
    name = BCS_Upper_Bar_UL
    position = 0, 0
  }
}

MAS_PAGE
{
  name = MAS_BCS_DockingPageUL

  onEntry = fc.SetPersistent("MFDUL_Page", 2)

  softkey = 0, fc.SetPersistent("MFD_UL", "MAS_BCS_MapPageUL")
  softkey = 1, fc.SetPersistent("MFD_UL", "MAS_BCS_DockingPageUL")
  softkey = 2, fc.SetPersistent("MFD_UL", "MAS_BCS_CameraPageUL")
  softkey = 3, fc.SetPersistent("MFD_UL", "MAS_BCS_LandingPageUL")
  softkey = 6, fc.SetPersistent("MFD_UL", "MAS_BCS_IntroPageUL")

  softkey = 20, fc.AddPersistentWrapped("Global_MFDULSelectedDockingAction", -1, 0, 9)
  softkey = 21, fc.AddPersistentWrapped("Global_MFDULSelectedDockingAction", 1, 0, 9)

  softkey = 25, BCS_DockingActionHandler()

  CAMERA
  {
    name = Camera
    position = 512, 64
    size = 768, 768
    camera = fc.ActiveDockingPortCamera()
    shader = MOARdV/ColorNoise
    properties = _Gain:fc.GetPersistentAsNumber("Global_DockCamGain")
    variable = fc.HasDock() * fc.GetDockIsReference()
  }

  TEXT
  {
    textColor = COLOR_MFD2_TEXT
    position = 0, 2
    text = Target: [#ffff9b]<=0=> $#$ fc.Select(fc.TargetType() ~= 0, fc.TargetName(), "-----")
  }

  POLYGON
  {
    name = Roll 0
    position = 896, 448
    color = fc.Select(fc.Between(fc.RollDockingAlignment(), -1, 1), 0, 255), fc.Select(fc.Between(fc.RollDockingAlignment(), -1, 1), 255, 0), 0, 255

    vertex = 0, -272
    vertex = 8, -288
    vertex = -8, -288

    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  POLYGON
  {
    name = Roll Dock
    position = 896, 448
    rotation = fc.RollDockingAlignment()
    color = fc.Select(fc.Between(fc.RollDockingAlignment(), -1, 1), 0, 255), fc.Select(fc.Between(fc.RollDockingAlignment(), -1, 1), 255, 0), 0, 255

    vertex = 0, -272
    vertex = -8, -256
    vertex = 8, -256

    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  TEXT
  {
    name = upper left captions
    textColor = COLOR_MFD2_TEXT
    position = 0, 3
    text = ASpd:$$$Dist:$$$RVel:$$$RInc:
    variable = fc.TargetType()
  }

  TEXT
  {
    name = upper left values
    textColor = COLOR_MFD2_TEXT_HIGHLIGHT
    position = 7, 3
    text = <=0,8:SIP##0.0=>m/s $#$ fc.ApproachSpeed()$$$<=0,9:SIP##0.0=>m $#$ fc.TargetDistance()$$$<=0,7:SIP##0.0=>m/s $#$ fc.TargetSpeed()$$$<=0,9:0.000=>° $#$ fc.TargetRelativeInclination()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = lower left captions
    textColor = COLOR_MFD2_TEXT
    position = 0, 23
    text = RVeX:$$$RVeY:$$$RVeZ:
    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  TEXT
  {
    name = lower left values
    position = 4, 23
    textColor = COLOR_MFD2_TEXT_HIGHLIGHT
    text = <=0,7:SIP##0.0=>m/s <=1=>$#$ fc.TargetVelocityX(); fc.Select(fc.TargetVelocityX(), "<", " ", ">")$$$<=0,7:SIP##0.0=>m/s <=1=>$#$ fc.TargetVelocityY(); fc.Select(fc.TargetVelocityY(), "v", " ", "^")$$$<=0,7:SIP##0.0=>m/s $#$ fc.TargetVelocityZ()
    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  TEXT
  {
    name = lower right captions
    position = 0, 20
    textColor = COLOR_MFD2_TEXT
    text = RDiX:$$$RDiY:$$$RDiZ:
    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  TEXT
  {
    name = lower right values
    position = 4, 20
    textColor = COLOR_MFD2_TEXT_HIGHLIGHT
    text = <=0,8:SIP##0.0=>m <=1=>$#$ fc.TargetDistanceX(); fc.Select(fc.TargetDistanceX(), "<", " ", ">")$$$<=0,8:SIP##0.0=>m <=1=>$#$ fc.TargetDistanceY(); fc.Select(fc.TargetDistanceY(), "v", " ", "^") $$$<=0,8:SIP##0.0=>m $#$ fc.TargetDistanceZ()
    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  TEXT
  {
    name = upper right captions
    position = 0, 18
    text = <=0:10=>RAnX:$#$ fc.Select(fc.Abs(fc.YawDockingAlignment()) < 1, "", "[#ff0000]")$$$<=0:10=>RAnY:$#$fc.Select(fc.Abs(fc.PitchDockingAlignment()) < 1, "", "[#ff0000]")
    variable = fc.TargetType() == 2
  }

  TEXT
  {
    name = upper right values
    position = 4, 18
    textColor = 255, 255, 0, 255
    text = <=0,8:0.0=>°$#$fc.Abs(fc.YawDockingAlignment())$$$<=0,8:0.0=>°$#$fc.Abs(fc.PitchDockingAlignment())
    variable = fc.TargetType() == 2
  }

  TEXT
  {
    name = upper right captions
    position = 0, 17
    textColor = COLOR_MFD2_TEXT
    text = Mode:
    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  TEXT
  {
    name = upper right values
    position = 4, 17
    textColor = COLOR_MFD2_TEXT_HIGHLIGHT
    text = <=0,8:0.0=>$#$fc.Select(fc.FlightUIMode(), "Docking", "Flight")
    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  LINE_STRING
  {
    name = Vertical Alignment Z+
    position = 896, 448
    startColor = 0, 255, 0, 180
    startWidth = 4

    vertex = fc.Remap(fc.TargetDistanceX(), -1 * fc.GetPersistentAsNumber("Global_DockingSensitivity") , fc.GetPersistentAsNumber("Global_DockingSensitivity") , -380, 380), -380
    vertex = fc.Remap(fc.TargetDistanceX(), -1 * fc.GetPersistentAsNumber("Global_DockingSensitivity") , fc.GetPersistentAsNumber("Global_DockingSensitivity") , -380, 380), 380

    variable = fc.TargetType() == 2 and fc.TargetDistanceZ() > 0
  }

  LINE_STRING
  {
    name = Vertical Alignment Z+
    position = 896, 448
    startColor = 0, 255, 0, 180
    startWidth = 4

    vertex = -380, fc.Remap(fc.TargetDistanceY(), -1 * fc.GetPersistentAsNumber("Global_DockingSensitivity") , fc.GetPersistentAsNumber("Global_DockingSensitivity") , 380, -380)
    vertex = 380, fc.Remap(fc.TargetDistanceY(), -1 * fc.GetPersistentAsNumber("Global_DockingSensitivity") , fc.GetPersistentAsNumber("Global_DockingSensitivity") , 380, -380)

    variable = fc.TargetType() == 2 and fc.TargetDistanceZ() > 0
  }

  LINE_STRING
  {
    name = Vertical Alignment Z-
    position = 896, 448
    startColor = 255, 0, 0, 180
    startWidth = 4

    vertex = fc.Remap(fc.TargetDistanceX(), -1 * fc.GetPersistentAsNumber("Global_DockingSensitivity") , fc.GetPersistentAsNumber("Global_DockingSensitivity") , -380, 380), -380
    vertex = fc.Remap(fc.TargetDistanceX(), -1 * fc.GetPersistentAsNumber("Global_DockingSensitivity") , fc.GetPersistentAsNumber("Global_DockingSensitivity") , -380, 380), 380

    variable = fc.TargetType() == 2 and fc.TargetDistanceZ() < 0
  }

  LINE_STRING
  {
    name = Vertical Alignment Z-
    position = 896, 448
    startColor = 255, 0, 0, 180
    startWidth = 4

    vertex = -380, fc.Remap(fc.TargetDistanceY(), -1 * fc.GetPersistentAsNumber("Global_DockingSensitivity") , fc.GetPersistentAsNumber("Global_DockingSensitivity") , 380, -380)
    vertex = 380, fc.Remap(fc.TargetDistanceY(), -1 * fc.GetPersistentAsNumber("Global_DockingSensitivity") , fc.GetPersistentAsNumber("Global_DockingSensitivity") , 380, -380)

    variable = fc.TargetType() == 2 and fc.TargetDistanceZ() < 0
  }

  LINE_STRING
  {
    name = Crosshair
    position = 896, 448
    startColor = 0, 0, 0, 180
    startWidth = 4

    vertex = -384, 0
    vertex = 384, 0

    variable = 1 - fc.GetPersistentAsNumber("Global_MFDULInvertCrosshair")
  }

  LINE_STRING
  {
    name = Crosshair
    position = 896, 448
    startColor = 0, 0, 0, 180
    startWidth = 4

    vertex = 0, -384
    vertex = 0, 384

    variable = 1 - fc.GetPersistentAsNumber("Global_MFDULInvertCrosshair")
  }

  LINE_STRING
  {
    name = Crosshair
    position = 896, 448
    startColor = 255, 255, 255, 180
    startWidth = 4

    vertex = -384, 0
    vertex = 384, 0

    variable = fc.GetPersistentAsNumber("Global_MFDULInvertCrosshair")
  }

  LINE_STRING
  {
    name = Crosshair
    position = 896, 448
    startColor = 255, 255, 255, 180
    startWidth = 4

    vertex = 0, -384
    vertex = 0, 384

    variable = fc.GetPersistentAsNumber("Global_MFDULInvertCrosshair")
  }

  POLYGON
  {
    name = Roll 0
    position = 896, 448
    color = fc.Select(fc.Between(fc.RollDockingAlignment(), -1, 1), 0, 255), fc.Select(fc.Between(fc.RollDockingAlignment(), -1, 1), 255, 0), 0, 180

    vertex = 0, -272
    vertex = 8, -288
    vertex = -8, -288

    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  POLYGON
  {
    name = Roll Dock
    position = 896, 448
    rotation = fc.RollDockingAlignment()
    color = fc.Select(fc.Between(fc.RollDockingAlignment(), -1, 1), 0, 255), fc.Select(fc.Between(fc.RollDockingAlignment(), -1, 1), 255, 0), 0, 180

    vertex = 0, -272
    vertex = -8, -256
    vertex = 8, -256

    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  SUB_PAGE
  {
    name = BCS_DockingOptions_LL
    position = 56, 112
    variable = fc.GetPersistentAsNumber("Global_MFDULSelectedDockingAction") > 0
  }

  SUB_PAGE
  {
    name = 3/4 Gauge Total MonoPropellant
    position = 416, 736
    variable = fc.Between(fc.TargetType(), 1, 2)
  }

  TEXT
  {
    textColor = 255, 0, 0, 255
    position = 35.5, 14.5
    text = No target
    variable = fc.TargetType() == 0 and fc.PeriodStep(2) == 1
  }

  SUB_PAGE
  {
    name = BCS_Upper_Bar_UL
    position = 0, 0
  }
}

MAS_PAGE
{
  name = MAS_BCS_CameraPageUL

  onEntry = fc.SetPersistent("MFDUL_Page", 3)

  softkey = 0, fc.SetPersistent("MFD_UL", "MAS_BCS_MapPageUL")
  softkey = 1, fc.SetPersistent("MFD_UL", "MAS_BCS_DockingPageUL")
  softkey = 2, fc.SetPersistent("MFD_UL", "MAS_BCS_CameraPageUL")
  softkey = 3, fc.SetPersistent("MFD_UL", "MAS_BCS_LandingPageUL")
  softkey = 6, fc.SetPersistent("MFD_UL", "MAS_BCS_IntroPageUL")

  softkey = 20, fc.AddPersistentWrapped("Global_MFDULSelectedCameraOption", -1, 0, 7)
  softkey = 21, fc.AddPersistentWrapped("Global_MFDULSelectedCameraOption", 1, 0, 7)

  softkey = 100, BCS_NumericalHandler(0)
  softkey = 101, BCS_NumericalHandler(1)
  softkey = 102, BCS_NumericalHandler(2)
  softkey = 103, BCS_NumericalHandler(3)
  softkey = 104, BCS_NumericalHandler(4)
  softkey = 105, BCS_NumericalHandler(5)
  softkey = 106, BCS_NumericalHandler(6)
  softkey = 107, BCS_NumericalHandler(7)
  softkey = 108, BCS_NumericalHandler(8)
  softkey = 109, BCS_NumericalHandler(9)
  softkey = 110, BCS_NumericalHandler(10)
  softkey = 111, BCS_NumericalHandler(11)
  softkey = 24, BCS_NumericalHandler(12)
  softkey = 25, BCS_CamerasActionHandler()

  CAMERA
  {
    name = Camera
    position = 512, 64
    size = 768, 768
    camera = fc.GetCameraName(fc.GetPersistentAsNumber("Global_MFDULSelectedCamera"))
    shader = MOARdV/ColorNoise
    properties = _Gain:fc.GetPersistentAsNumber("Global_MFDULCameraGain")
  }

  TEXT
  {
    name = Pip
    textColor = 255, 0, 0, 255
    position = 1, 4 + fc.GetPersistentAsNumber("Global_MFDULSelectedCameraOption")
    text = >
  }

  TEXT
  {
    name = Option
    textColor = COLOR_MFD2_TEXT
    position = 2, 4
    text = Switch camera
  }

  TEXT
  {
    name = Option
    textColor = COLOR_MFD2_TEXT
    position = 2, 5
    text = Change gain
  }

  TEXT
  {
    name = Option
    textColor = COLOR_MFD2_TEXT
    position = 2, 6
    text = Zoom camera | [#ffff9b]<=0,5:##0.0=>° $&$ fc.GetFoV(fc.GetPersistentAsNumber("Global_MFDULSelectedCamera"))
  }

  TEXT
  {
    name = Option
    textColor = COLOR_MFD2_TEXT
    position = 2, 7
    text = Pan camera  | [#ffff9b]<=0,5:##0.0=>° $&$ fc.GetPan(fc.GetPersistentAsNumber("Global_MFDULSelectedCamera"))
  }

  TEXT
  {
    name = Option
    textColor = COLOR_MFD2_TEXT
    position = 2, 8
    text = Tilt camera | [#ffff9b]<=0,5:##0.0=>° $&$ fc.GetTilt(fc.GetPersistentAsNumber("Global_MFDULSelectedCamera"))
  }

  TEXT
  {
    name = Option
    textColor = COLOR_MFD2_TEXT
    position = 2, 9
    text = Reset zoom
  }

  TEXT
  {
    name = Option
    textColor = COLOR_MFD2_TEXT
    position = 2, 10
    text = Reset rotation
  }

  TEXT
  {
    name = Title
    textColor = COLOR_MFD2_TEXT_HIGHLIGHT
    position = 2, 23
    text = <=0=> $&$ fc.GetCameraName(fc.GetPersistentAsNumber("Global_MFDULSelectedCamera"))
  }

  LINE_STRING
  {
    name = Scratch Pad Frame
    position = 16, 800
    startColor = COLOR_MFD2_TEXT
    startWidth = 4

    vertex = 0, 0
    vertex = 0, 32
    vertex = 480, 32
    vertex = 480, 0
  }

  TEXT
  {
    name = Scratch Pad
    position = 1, 25
    textColor = COLOR_MFD2_TEXT_HIGHLIGHT
    text = <=0=> $&$ fc.GetPersistent("Global_AscentScratchPad")
  }

  IMAGE
  {
    name = Record dot
    texture = BCS_Starliner_IVA/Images/redDot
    position = 1210, 104
    size = 30, 30
    variable = fc.PeriodStep(1)
  }

  SUB_PAGE
  {
    name = BCS_Upper_Bar_UL
    position = 0, 0
  }
}

MAS_PAGE
{
  name = MAS_BCS_LandingPageUL

  onEntry = fc.SetPersistent("MFDUL_Page", 4)

  softkey = 0, fc.SetPersistent("MFD_UL", "MAS_BCS_MapPageUL")
  softkey = 1, fc.SetPersistent("MFD_UL", "MAS_BCS_DockingPageUL")
  softkey = 2, fc.SetPersistent("MFD_UL", "MAS_BCS_CameraPageUL")
  softkey = 3, fc.SetPersistent("MFD_UL", "MAS_BCS_LandingPageUL")
  softkey = 6, fc.SetPersistent("MFD_UL", "MAS_BCS_IntroPageUL")

  softkey = 20, fc.AddPersistentWrapped("Global_MFDULSelectedLandingAction", -1, 0, 3)
  softkey = 21, fc.AddPersistentWrapped("Global_MFDULSelectedLandingAction", 1, 0, 3)

  softkey = 24, BCS_LandingClearHandler()
  softkey = 25, BCS_LandingActionHandler()

  softkey = 100, fc.SetThrottleLimit(1)
  softkey = 101, fc.SetThrottleLimit(0.1)
  softkey = 102, fc.SetThrottleLimit(0.2)
  softkey = 103, fc.SetThrottleLimit(0.3)
  softkey = 104, fc.SetThrottleLimit(0.4)
  softkey = 105, fc.SetThrottleLimit(0.5)
  softkey = 106, fc.SetThrottleLimit(0.6)
  softkey = 107, fc.SetThrottleLimit(0.7)
  softkey = 108, fc.SetThrottleLimit(0.8)
  softkey = 109, fc.SetThrottleLimit(0.9)

  CAMERA
  {
    name = Camera
    position = 512, 64
    size = 768, 768
    camera = "AftCamera"
    shader = MOARdV/ColorNoise
    properties = _Gain:fc.GetPersistentAsNumber("Global_MFDULAftCameraGain")
  }

  LINE_STRING
  {
    name = Crosshair
    position = 896, 64
    startColor = 0, 0, 0, 255
    startWidth = 4

    vertex = 0, 0
    vertex = 0, 768
  }

  LINE_STRING
  {
    name = Crosshair
    position = 512, 448
    startColor = 0, 0, 0, 255
    startWidth = 4

    vertex = 0, 0
    vertex = 768, 0
  }

  LINE_STRING
  {
    name = Crosshair
    position = 896, 64
    startColor = 255, 255, 255, 255
    startWidth = 2

    vertex = 0, 0
    vertex = 0, 768
  }

  LINE_STRING
  {
    name = Crosshair
    position = 512, 448
    startColor = 255, 255, 255, 255
    startWidth = 2

    vertex = 0, 0
    vertex = 768, 0
  }

  ELLIPSE
  {
    name = Outer ring
    position = 896, 448
    startColor = 0, 0, 0, 255
    startWidth = 4
    vertexCount = 64
    radiusX = 384.0
  }

  ELLIPSE
  {
    name = Outer ring
    position = 896, 448
    startColor = 255, 255, 255, 255
    startWidth = 2
    vertexCount = 64
    radiusX = 384.0
  }
  //384
  ELLIPSE
  {
    name = Inner ring
    position = 896 + fc.Remap(fc.SurfaceLateralSpeed(), -20, 20, -384, 384), 448 + fc.Remap(fc.SurfaceForwardSpeed(), -20, 20, -384, 384)
    startColor = 255, 0, 0, 255
    startWidth = 4
    vertexCount = 64
    radiusX = fc.Select(fc.AltitudeBottom() > 100, fc.Remap(fc.AltitudeBottom(), 300, 100, 5, 384), fc.Remap(fc.AltitudeBottom(), 100, 0, 5, 384))

    variable = fc.Between(fc.SurfaceLateralSpeed(), -0.5, 0.5) == 0 or fc.Between(fc.SurfaceForwardSpeed(), -0.5, 0.5) == 0
  }

  ELLIPSE
  {
    name = Inner ring
    position = 896 + fc.Remap(fc.SurfaceLateralSpeed(), -20, 20, -384, 384), 448 + fc.Remap(fc.SurfaceForwardSpeed(), -20, 20, -384, 384)
    startColor = 0, 255, 0, 255
    startWidth = 4
    vertexCount = 64
    radiusX = fc.Select(fc.AltitudeBottom() > 100, fc.Remap(fc.AltitudeBottom(), 300, 100, 5, 384), fc.Remap(fc.AltitudeBottom(), 100, 0, 5, 384))

    variable = fc.Between(fc.SurfaceLateralSpeed(), -0.5, 0.5) * fc.Between(fc.SurfaceForwardSpeed(), -0.5, 0.5)
  }

  POLYGON
  {
    name = poly
    position = 896 + fc.Remap(fc.SurfaceLateralSpeed(), -20, 20, -384, 384), 448 + fc.Remap(fc.SurfaceForwardSpeed(), -20, 20, -384, 384)
    color = 255, 0, 0, 180
    rotation = 45

    vertex = -4, -4
    vertex = -4, 4
    vertex = 4, 4
    vertex = 4, -4

    variable = fc.Between(fc.SurfaceLateralSpeed(), -0.5, 0.5) == 0 or fc.Between(fc.SurfaceForwardSpeed(), -0.5, 0.5) == 0
  }

  POLYGON
  {
    name = poly
    position = 896 + fc.Remap(fc.SurfaceLateralSpeed(), -20, 20, -384, 384), 448 + fc.Remap(fc.SurfaceForwardSpeed(), -20, 20, -384, 384)
    color = 0, 255, 0, 180
    rotation = 45

    vertex = -4, -4
    vertex = -4, 4
    vertex = 4, 4
    vertex = 4, -4

    variable = fc.Between(fc.SurfaceLateralSpeed(), -0.5, 0.5) * fc.Between(fc.SurfaceForwardSpeed(), -0.5, 0.5)
  }

  TEXT
  {
    name = Data
    position = 1, 3
    textColor = COLOR_MFD2_TEXT
    text = R.Alt:     [#ffff9b]<=0:0.00=> [#afd3ff]m $&$ fc.Min(500, fc.AltitudeBottom())
  }

  TEXT
  {
    name = Data
    position = 1, 4
    textColor = COLOR_MFD2_TEXT
    text = H.Speed X: [#ffff9b]<=0:0.00=> [#afd3ff]m/s $&$ fc.SurfaceLateralSpeed()
  }

  TEXT
  {
    name = Data
    position = 1, 5
    textColor = COLOR_MFD2_TEXT
    text = H.Speed Y: [#ffff9b]<=0:0.00=> [#afd3ff]m/s $&$ fc.SurfaceForwardSpeed()
  }

  TEXT
  {
    name = Data
    position = 1, 6
    textColor = COLOR_MFD2_TEXT
    text = V.Speed:   [#ffff9b]<=0:0.00=> [#afd3ff]m/s $&$ fc.VerticalSpeed()
  }

  TEXT
  {
    name = Data
    position = 1, 7
    textColor = COLOR_MFD2_TEXT
    text = T.Accel:   [#ffff9b]<=0:0.00=> [#afd3ff]m/s $&$ fc.Acceleration()
  }

  TEXT
  {
    name = Data
    position = 1, 8
    textColor = COLOR_MFD2_TEXT
    text = Slope:     [#ffff9b]<=0:0.00=>[#afd3ff]° $&$ fc.BodyTerrainSlope(fc.CurrentBodyIndex(), fc.LandingLatitude(), fc.LandingLongitude())
  }

  TEXT
  {
    name = Data
    position = 1, 10
    textColor = COLOR_MFD2_TEXT
    text = M.TWR:     [#ffff9b]<=0:0.00=> $&$ fc.MaxTWR(true)
  }

  TEXT
  {
    name = Data
    position = 1, 11
    textColor = COLOR_MFD2_TEXT
    text = C.TWR:     [#ffff9b]<=0:0.00=> $&$ fc.CurrentTWR()
  }

  TEXT
  {
    name = Data
    position = 1, 13
    textColor = COLOR_MFD2_TEXT
    text = Land @:    T-[#ffff9b]<=0:0.0=>[#afd3ff]s $&$ fc.Min(fc.SuicideBurnTime(), 999)
  }

  TEXT
  {
    name = Data
    position = 1, 14
    textColor = COLOR_MFD2_TEXT
    text = S. burn @: T-[#ffff9b]<=0:0.0=>[#afd3ff]s $&$ fc.Min(fc.SuicideBurnTime(), 999)
  }

  TEXT
  {
    name = Data
    position = 1, 16
    textColor = COLOR_MFD2_TEXT
    text = T. Gtrack: [#ffff9b]<=0:0.00=>[#afd3ff] m $&$ fc.Min(nav.GroundDistance(fc.LandingLatitude(), fc.LandingLongitude(), fc.TargetLatitude(), fc.TargetLongitude()), 99999)
    variable = fc.TargetType() == 1
  }

  POLYGON
  {
    name = poly
    position = 848, 256
    color = 0, 0, 0, 80

    vertex = 0, 0
    vertex = 0, 32
    vertex = 96, 32
    vertex = 96, 0

    variable = fc.VesselLanded()
  }
  //56,11
  TEXT
  {
    name = Data
    position = 55.5, 2
    textColor = COLOR_MFD2_TEXT
    text = 0

    variable = fc.VesselLanded() == 0 and fc.Between(fc.AltitudeBottom(), 0, 100)
  }

  TEXT
  {
    name = Data
    position = 54.5, 13
    textColor = COLOR_MFD2_TEXT
    text = 100

    variable = fc.VesselLanded() == 0 and fc.Between(fc.AltitudeBottom(), 0, 100)
  }

  TEXT
  {
    name = Data
    position = 54.5, 2
    textColor = COLOR_MFD2_TEXT
    text = 100

    variable = fc.VesselLanded() == 0 and fc.Between(fc.AltitudeBottom(), 100, 300)
  }

  TEXT
  {
    name = Data
    position = 54.5, 13
    textColor = COLOR_MFD2_TEXT
    text = 300

    variable = fc.VesselLanded() == 0 and fc.Between(fc.AltitudeBottom(), 100, 300)
  }

  TEXT
  {
    name = Data
    position = 52.5, 8
    textColor = COLOR_MFD2_TEXT
    text = Contact

    variable = fc.VesselLanded()
  }

  SUB_PAGE
  {
    name = 3/4 Gauge Throttle
    position = 64+64, 608+64
  }

  SUB_PAGE
  {
    name = 3/4 Gauge Thrust Limit
    position = 256+64, 608+64
  }

  SUB_PAGE
  {
    name = BCS_LandingOptions_LL
    position = 56, 112
    variable = fc.GetPersistentAsNumber("Global_MFDULSelectedLandingAction") > 0
  }

  SUB_PAGE
  {
    name = BCS_Upper_Bar_UL
    position = 0, 0
  }
}